ARG PHP_VERSION

FROM php:${PHP_VERSION}-fpm AS development

# RUN apt-get update && apt-get install -y $DEPS_APT

# RUN docker-php-ext-install $DEPS_PHP

# COPY $BLUEPRINT_DIR/nginx/default.conf /etc/nginx/sites-available/default

ARG NGINX_PATH

RUN NGINX_PATH=${NGINX_PATH} envsubst '${NGINX_PATH}' < /etc/nginx/sites-available/default | sponge /etc/nginx/sites-available/default

# $DEVELOPMENT_COMMANDS

# Install s6 supervisor
# Reference: https://github.com/just-containers/s6-overlay#the-docker-way
RUN wget -P /tmp/ https://github.com/just-containers/s6-overlay/releases/download/v2.0.0.1/s6-overlay-amd64.tar.gz && \
    gunzip -c /tmp/s6-overlay-amd64.tar.gz | tar -xf - -C /

# Set up supervisor
# COPY $BLUEPRINT_DIR/supervisor/cont-finish.d /etc/cont-finish.d
# COPY $BLUEPRINT_DIR/supervisor/cont-init.d /etc/cont-init.d
# COPY $BLUEPRINT_DIR/supervisor/fix-attrs.d /etc/fix-attrs.d
# COPY $BLUEPRINT_DIR/supervisor/services.d /etc/services.d

ENTRYPOINT ["/init"]

RUN apt-get clean
RUN rm -rf .docker-blueprint /tmp/*

RUN ln -s /usr/local/etc/php/php.ini-development /usr/local/etc/php/php.ini

FROM development AS production

COPY . /var/www/html/

# $PRODUCTION_COMMANDS

RUN ln -s /usr/local/etc/php/php.ini-production /usr/local/etc/php/php.ini

# RUN apt-get purge $PURGE_APT
